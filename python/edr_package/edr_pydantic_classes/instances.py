# generated by datamodel-codegen:
#   filename:  https://schemas.opengis.net/ogcapi/edr/1.0/openapi/schemas/instances.yaml
#   timestamp: 2022-06-29T09:43:11+00:00
from __future__ import annotations


from typing import Dict
from typing import List
from typing import Optional

from pydantic import Field

from .generic_models import Link, CrsObject, Variables, ParameterName, Extent
from .my_base_model import MyBaseModel


class InstancesVariables(Variables):
    query_type: str = "instances"
    title: str = "Instances query"


class InstancesLink(Link):
    variables: InstancesVariables


class InstancesDataQueryLink(MyBaseModel):
    link: InstancesLink


class PositionVariables(Variables):
    query_type: str = "position"
    title: str = "Position query"
    coords: str = "Well Known Text POINT value i.e. POINT(24.9384 60.1699)"


class PositionLink(Link):
    variables: PositionVariables


class PositionDataQueryLink(MyBaseModel):
    link: PositionLink


class DataQueries(MyBaseModel):
    position: Optional[PositionDataQueryLink] = None
    # radius: Optional[DataQueryLink] = None
    # area: Optional[DataQueryLink] = None
    # cube: Optional[DataQueryLink] = None
    # trajectory: Optional[DataQueryLink] = None
    # corridor: Optional[DataQueryLink] = None
    # locations: Optional[DataQueryLink] = None
    # items: Optional[DataQueryLink] = None
    instances: Optional[InstancesDataQueryLink] = None


class Instance(MyBaseModel):
    links: List[Link] = Field(
        ...,
        example=[
            {
                "href": "https://wwww.example.org/service/description.html",
                "hreflang": "en",
                "rel": "service-doc",
                "type": "text/html",
                "title": "",
            },
            {
                "href": "https://www.example.org/service/licence.html",
                "hreflang": "en",
                "rel": "licence",
                "type": "text/html",
                "title": "",
            },
            {
                "href": "https://www.example.org/service/terms-and-conditions.html",
                "hreflang": "en",
                "rel": "restrictions",
                "type": "text/html",
                "title": "",
            },
            {
                "href": "http://www.example.org/edr/collections/the_collection_id/",
                "hreflang": "en",
                "rel": "collection",
                "type": "collection",
                "title": "Collection",
            },
            {
                "href": "http://www.example.org/edr/collections/the_collection_id/position",
                "hreflang": "en",
                "rel": "data",
                "type": "position",
                "title": "Position",
            },
        ],
    )
    id: str
    title: Optional[str]
    description: Optional[str]
    keywords: Optional[List[str]]
    extent: Extent
    data_queries: Optional[DataQueries]
    crs: Optional[str | List[str]]
    output_formats: Optional[List[str]]
    parameter_names: Optional[Dict[str, ParameterName]]


class InstancesModel(MyBaseModel):
    links: List[Link] = Field(
        ...,
        example=[
            {
                "href": "http://www.example.org/edr/collections/the_collection_id/instances",
                "hreflang": "en",
                "rel": "self",
                "type": "application/json",
            },
            {
                "href": "http://www.example.org/edr/collections/the_collection_id/instances?f=html",
                "hreflang": "en",
                "rel": "alternate",
                "type": "text/html",
            },
            {
                "href": "http://www.example.org/edr/collections/the_collection_id/instances?f=xml",
                "hreflang": "en",
                "rel": "alternate",
                "type": "application/xml",
            },
        ],
    )
    instances: List[Instance]


# For now, the collection metadata corresponds to the first instance metadata. So they have equal classes
class Collection(Instance):
    pass


class CollectionsModel(MyBaseModel):
    links: List[Link] = Field(
        ...,
        example=[
            {
                "href": "http://www.example.org/edr/collections",
                "hreflang": "en",
                "rel": "self",
                "type": "application/json",
            },
            {
                "href": "http://www.example.org/edr/collections?f=html",
                "hreflang": "en",
                "rel": "alternate",
                "type": "text/html",
            },
            {
                "href": "http://www.example.org/edr/collections?f=xml",
                "hreflang": "en",
                "rel": "alternate",
                "type": "application/xml",
            },
        ],
    )
    collections: List[Collection]
