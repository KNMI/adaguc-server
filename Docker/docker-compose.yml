services:
  adaguc-viewer:
    image: openearth/adaguc-viewer
    container_name: adaguc-viewer
    hostname: adaguc-viewer
    networks:
      - adaguc-network
    environment:
      - "LOCAL_ADAGUCSERVER_ADDR=${EXTERNALADDRESS}" # Should be same as adaguc-server's EXTERNALADDRESS
      - "REMOTE_ADAGUCSERVER_ADDR=http://adaguc-server:8080/" # Do not change this within the docker-compose environment
      - "ADAGUCSERVICES_AUTOWMS=${EXTERNALADDRESS}/autowms?"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  adaguc-data-explorer:
    image: openearth/adaguc-data-explorer
    container_name: adaguc-data-explorer
    hostname: adaguc-data-explorer
    networks:
      - adaguc-network
    environment:
      - "ADAGUC_AUTOWMS_ENDPOINT=${EXTERNALADDRESS}/autowms?"
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  adaguc-server:
    # image: openearth/adaguc-server
    build: ..
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "2"
    #       memory: 2048M
    container_name: my-adaguc-server
    hostname: my-adaguc-server
    volumes:
      - ${ADAGUC_DATASET_DIR}/:/data/adaguc-datasets
      - ${ADAGUC_AUTOWMS_DIR}/:/data/adaguc-autowms
      - ${ADAGUC_DATA_DIR}/:/data/adaguc-data
    networks:
      - adaguc-network
    environment:
      - "PGBOUNCER_DISABLE_SSL=true"
      - "PGBOUNCER_ENABLE=true"
      - "ADAGUC_DB=host=adaguc-db port=5432 user=adaguc password=adaguc dbname=adaguc"
      - "ADAGUC_ENABLELOGBUFFER=TRUE"
      - "ADAGUC_AUTOWMS_DIR=/data/adaguc-autowms"
      - "ADAGUC_DATA_DIR=/data/adaguc-data"
      - "ADAGUC_DATASET_DIR=/data/adaguc-datasets"
      - "ADAGUC_REDIS=redis://adaguc-redis:6379"
    env_file:
      - .env
    restart: unless-stopped
    links:
      - adaguc-db
    depends_on:
      - adaguc-db
      - adaguc-redis
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  nginx:
    build: nginx-adaguc
    container_name: nginx-adaguc
    hostname: nginx-adaguc
    ports:
      - "${ADAGUC_PORT}:443"
    networks:
      - adaguc-network
    environment:
      - "SSL_ADMIN_EMAIL=adaguc@knmi.nl"
      - "SSL_DOMAINS=${EXTERNALADDRESS}"
      - "EXTERNAL_HOSTNAME=${EXTERNALADDRESS}"
    volumes:
      - /etc/letsencrypt
      - /cert
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  adaguc-db:
    image: postgres:13
    container_name: adaguc-db
    hostname: adaguc-db
    # Ensures containers running in the adaguc-network docker network can connect to the database, provided they use the
    # right credentials
    networks:
      - adaguc-network
    volumes:
      - adaguc-server-compose-adagucdb:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=adaguc"
      - "POSTGRES_PASSWORD=adaguc"
      - "POSTGRES_DB=adaguc"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  adaguc-redis:
    image: redis:7
    container_name: adaguc-redis
    hostname: adaguc-redis
    restart: unless-stopped
    networks:
      - adaguc-network
volumes:
  adaguc-server-compose-adagucdb:
networks:
  adaguc-network:
#Run
# bash docker-compose-generate-env.sh -a ~/adaguc-server-docker/adaguc-autowms/ -d ~/adaguc-server-docker/adaguc-datasets/ -f ~/adaguc-server-docker/adaguc-data -p 443
# docker-compose pull
# docker-compose build
# docker-compose up -d --build
# wait 10 seconds for the services to start
